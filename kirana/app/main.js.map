{"version":3,"sources":["./src/app/lf-currency/lf-currency.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/lf-input/lf-input.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/form-builder/form-builder.component.html","./src/app/form-builder/form-builder.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, forwardRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'lf-currency',\n    template: `<div>\n                <mat-form-field appearance=\"outline\" class=\"lf-currency\">\n                    <mat-label>{{label}}</mat-label>\n                    <div *ngIf=\"value\" class=\"lf-input-prefix\">{{currency=='USD'?'$ ':'₹ '}}</div>\n                    <input matInput placeholder=\"\" [(ngModel)]=\"value\" (focusout)=\"onBlur()\" #input \n                    (change)=\"onChange()\" [disabled]=\"disabled\" style=\"display:inline;\">\n                </mat-form-field>\n              </div>`,\n    styles: [`\n            ::ng-deep .lf-currency .mat-form-field-infix{\n                    display: flex;\n                }\n    \n                ::ng-deep .lf-input-prefix{\n                    margin-right: 3px;\n                    margin-top: -0.0625em;\n                    color: #555;\n                }\n            `],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => LfCurrencyComponent),\n        multi: true\n    }]\n})\nexport class LfCurrencyComponent implements ControlValueAccessor, OnInit {\n\n    @Input() label: string = '';\n    @Input() disabled: boolean = false;\n    @ViewChild('input') input: ElementRef = { nativeElement: '' };\n\n    private innerValue: any = '';\n\n    @Input() currency: string = 'INR';\n\n    private onTouchedCallback: () => void = () => { };\n    private onChangeCallback: (_: any) => void = (_: any) => { };\n\n    get value(): any {\n        return this.innerValue;\n    };\n\n    set value(v: any) {\n        let val = this.value\n        if(!isNaN(this.parse(v))){\n          this.innerValue = v;\n          this.input.nativeElement.value = this.transform(this.parse(v))\n          this.onChangeCallback(v);\n        } else{\n          this.value = val\n        }\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            if(this.value){\n                this.input.nativeElement.value = this.transform(this.value)\n            }\n        }, 0);\n    }\n\n    onBlur() {\n        let elem = this.input.nativeElement;\n        (this.value)?elem.value = this.transform(this.value):false;\n        this.onTouchedCallback();\n    }\n\n    writeValue(value: any) {\n        this.innerValue = value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    transform(number: any) {\n        if (this.currency === 'US') {\n            let string = number + ''\n            return string.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n        }\n        else {\n            number = Math.round(number * 100) / 100;\n            let numberStr = number.toString();\n            let breaker = numberStr.split(\".\");\n            numberStr = breaker[0];\n            let decimals = breaker[1] ? `.${breaker[1]}` : \"\";\n            let thousandsMatcher = /(\\d+)(\\d{3})$/;\n            let thousandsAndRest = thousandsMatcher.exec(numberStr);\n            if (!thousandsAndRest) return numberStr + decimals;\n            let val = thousandsAndRest[1].replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + \",\" + thousandsAndRest[2];\n            return val + decimals;\n        }\n    }\n\n    parse(value: any) {\n        value = String(value)\n        return value.split(\",\").join(\"\");\n    }\n\n    onChange() {\n        this.value = Number(this.parse(this.value))\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public img: string;\n  public name: string;\n  public phone: string;\n  public address: string;\n  public timing: string;\n\n  constructor(private http: HttpClient){}\n  @ViewChild('file') file: ElementRef;\n  title = 'My Application';\n  form = new FormData();\n\n  validate(v) {\n    return (v.length === 12)\n  }\n\n  change(e) {\n    this.img = e.target.files[0]\n    console.log(this.img)\n  }\n\n  submit() {\n    \n    this.form.set('image', this.img)\n    this.form.set('key', '28c9b266952ca9d1a09972ed08c96fb9')\n    fetch('https://api.imgbb.com/1/upload', {\n      method: 'POST', body: this.form\n    }).then(d => d.json()).then(d=>this.upload(d.data.url))\n  }\n\n  upload(img) {\n    let data = {\n      name: this.name,\n      address:this.address,\n      image:img,\n      timing:this.timing,\n      phone:this.phone\n    }\n    console.log(data)\n\n    this.http.post('./v1/api/store',data).subscribe(()=>{})\n    \n  }\n\n}\n","<!-- Navbar Start -->\n<nav class=\"navbar navbar-dark bg-primary\">\n  <div class=\"container-fluid\">\n    <span class=\"navbar-brand mb-0 h1\">Test Application</span>\n\n    <a class=\"btn btn-primary\" data-bs-toggle=\"offcanvas\" href=\"#offcanvasExample\" role=\"button\"\n      aria-controls=\"offcanvasExample\">\n      Open Side Menu\n    </a>\n  </div>\n</nav>\n<!-- Navbar End -->\n\n<!-- Off Canvas Start -->\n<div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasExample\" aria-labelledby=\"offcanvasExampleLabel\">\n  <div class=\"offcanvas-header\">\n    <h2 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">Side Menu</h2>\n    <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n  </div>\n  <div class=\"offcanvas-body\">\n  </div>\n</div>\n<!-- Off Canvas End -->\n\n<!-- Test Area Start -->\n<div class=\"row m-0 col-12 justify-content-center\">\n  <div class=\"card col-md-8 mt-5 col-10 bg-light\">\n    <div class=\"card-body\">\n      <h2 class=\"card-title\">Form</h2>\n      <app-form-builder></app-form-builder>\n    </div>\n  </div>\n  <div class=\"card col-md-8 mt-5 col-10 bg-light\">\n    <div class=\"card-body\">\n      <h2 class=\"card-title\">Add New Shop</h2>\n      <div class=\"col-xs-12 row\">\n        <div class=\"col-md-6\">\n          <div class=\"input-group mb-3\">\n            <input type=\"file\" class=\"form-control\" id=\"inputGroupFile01\" #file (change)=\"change($event)\">\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"input-group mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Shop Name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"name\" name='name'>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"input-group mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Address\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"address\">\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"input-group mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Phone\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"phone\">\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"input-group mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Timing\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"timing\">\n          </div>\n        </div>\n        <div class=\"col-12 text-center\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Primary</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Test Area End -->","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LfInputComponent } from './lf-input/lf-input.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input'\nimport { IMaskModule } from 'angular-imask';\nimport { LfCurrencyComponent } from './lf-currency/lf-currency.component';\nimport { FormBuilderComponent } from './form-builder/form-builder.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LfInputComponent,\n    LfCurrencyComponent,\n    FormBuilderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IMaskModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'lf-mat-input',\n    template: `<div>\n                <mat-form-field appearance=\"outline\" class=\"lf-mat-input\">\n                    <mat-label>{{label}}</mat-label>\n                    <div *ngIf=\"value && prefix\" class=\"lf-input-prefix\">{{prefix}}</div>\n                    <input matInput placeholder=\"\" [(ngModel)]=\"value\" #input [disabled]=\"disabled\" (focusout)=\"onBlur()\" \n                    [imask]=\"{mask:mask}\" [unmask]=\"true\" [errorStateMatcher]='matcher' [required]=\"required\">\n                    <mat-error class=\"MT10\">{{errMessage}}</mat-error>\n                </mat-form-field>\n              </div>`,\n    styles: [`\n                ::ng-deep .lf-mat-input .mat-form-field-infix{\n                    display: flex;\n                }\n                \n                .lf-mat-input .lf-input-prefix{\n                    margin-right: 4px;\n                    margin-top: -0.0625em;\n                    color: #777;\n                }\n    `],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => LfInputComponent),\n        multi: true\n    }]\n})\nexport class LfInputComponent implements ControlValueAccessor {\n\n    @Input() label: string = '';\n    @Input() prefix: string;\n    @Input() errMessage: string = '';\n    @Input() errorMessage: string = '';\n    @Input() disabled: boolean = false;\n    @Input() required: boolean = false;\n    @Input() validate: (v: any) => boolean = (v: any) => true;\n    @Input() upCase: boolean = false;\n    @Input() region: string = '';\n    @Input() mask: any = /\\^*$/;\n\n    @ViewChild('input') input: ElementRef = { nativeElement: '' };\n\n    private innerValue: any = '';\n    private validator: boolean = false;\n    public matcher = { isErrorState: () => this.validator }\n\n    private onTouchedCallback: () => void = () => { };\n    private onChangeCallback: (_: any) => void = (_: any) => { };\n\n    get value(): any {\n        return this.innerValue;\n    };\n\n    set value(v: any) {\n        this.innerValue = v;\n        this.onChangeCallback(v);\n    }\n\n    writeValue(value: any) {\n        this.innerValue = value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    onBlur() {\n        (this.upCase && this.value) ? this.value = this.value.toUpperCase() : true;\n        let requiredFn = () => {\n            this.validator = this.required;\n            this.errMessage = 'This field is required.';\n        }\n        let validateFn = () => {\n            this.validator = !this.validate(this.value);\n            this.errMessage = this.errorMessage;\n        }\n        (this.value) ? validateFn() : requiredFn();\n        this.onTouchedCallback();\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","<div class=\"row\">\n    <div class=\"col-12 mb-2 d-flex justify-content-end\">\n        <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addFeildModal\">Add New Field</button>\n    </div>\n    <div class=\"col-6\" *ngFor=\"let form of formArray\">\n        <lf-mat-input [label]=\"form.label\"></lf-mat-input>\n    </div>\n</div>\n<!-- Add New Field Model -->\n<div class=\"modal fade\" id=\"addFeildModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <div class=\"modal-title\" id=\"exampleModalLabel\">Modal title</div>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <lf-mat-input label='Label' [(ngModel)]=\"newLabel\"></lf-mat-input>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNew()\" data-bs-dismiss=\"modal\"\n                    [disabled]=\"!newLabel\">Save changes</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { form } from './form-model';\n\n@Component({\n  selector: 'app-form-builder',\n  templateUrl: './form-builder.component.html',\n  styleUrls: ['./form-builder.component.scss']\n})\nexport class FormBuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public formArray: form[] = [\n    {\n      label: 'First Name',\n      type: 'text'\n    },\n    {\n      label: 'Last Name',\n      type: 'text'\n    }\n  ];\n\n  public newLabel: any;\n\n  addNew() {\n    if(this.newLabel){\n      this.formArray.push({label: this.newLabel, type: 'text'});\n      this.newLabel = null;\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}